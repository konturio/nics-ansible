endpoint.rest=https://{{ nics_alias_fqdn }}/api/v1

endpoint.geoserver=https://{{ nics_map_fqdn }}/geoserver

endpoint.upload=https://{{ nics_alias_fqdn }}/upload

#private.cookie.domain=.hadrsys.info

#iplanet.key=iPlanetDirectoryPro
#iplanet.path=/
#iplanet.domain=.hadrsys.info

#openam.key=AMAuthCookie
#openam.path=/
#openam.domain=.hadrsys.info

#private.google.recaptcha.key=6LfVSA4TAAAAAAHsRfNPVSuxHd-uKgBXhiPghzNY
#private.google.recaptcha.secret=6LfVSA4TAAAAAHYEMrMNO4cn2mbD4uxyUH00z53L

rabbitmq.hostname=localhost
rabbitmq.username=guest
rabbitmq.userpwd=guest
rabbitmq.exchange.name=iweb.amq.topic

feedback.topic=iweb.nics.alert.email
user.enabled.email.from={{ nics_email_fromfield_and_notifications }}
user.enabled.email.subject=Welcome to Team NICS!
user.enabled.email.body=<html><body><p>On behalf of the NICS User Group your NICS account has been activated.</p></body></html>
# comma separated list of email addresses
feedback.email.to={{ nics_email_fromfield_and_notifications }}
feedback.email.subject=Feedback Report from


# In minutes
#token.timeout=720

# Report properties. Storage isn't really used on the web side, so will factor out at some point
report.general.storage={{ nics_home_directory }}/upload/reports/general/
report.general.url=https://{{ nics_web_fqdn }}/upload/reports/general/

report.uxo.storage={{ nics_home_directory }}/upload/reports/uxo/
report.uxo.url=https://{{ nics_web_fqdn }}/upload/reports/uxo/

report.damage.storage={{ nics_home_directory }}upload/reports/damage/
report.damage.url=https://{{ nics_web_fqdn }}/upload/reports/damage/

maps.bing.apikey=AtGPRrGU34hnesu7OyU8P12h5bkCjfV6HFAWkZDpvXyLIcKfyghlb1IGzBfI-Onm

#prepopulate datalayer sources
#datalayer.avl.source=http://example/geoserver/NICS/wfs,https://example/arcgis2/services/NICS/VCFDAVLResources/MapServer/WFSServer

#main.site.title=NICS6 Demo
#main.site.label=Next Generation Incident Command System
#main.site.logo=login/images/nics-logo.jpg
help.site.url=https://public.nics.ll.mit.edu/nicshelp/
registration.help.info={{ nics_email_fromfield_and_notifications }}

# password.requirements
#
# The text displayed under "Password Requirements" on the registration page. Must explain
# in user friendly terms the requirements of the password that the password.pattern matches
#
# NOTE: Due to the Config package having multi-value properties enabled, you have to
# escape any commas with a \
#
# Default: Your password must be a minimum 8 characters long and a maximum of 20 with at least one digit\, one upper case letter\, one lower case letter and one special symbol: @#$%-_!
#
#password.requirements=Your password must be a minimum 8 characters long and a maximum of 20 with at least one digit\, one upper case letter\, one lower case letter and one special symbol: @#$%-_!

# password.pattern
#
# The password pattern for client-side password validation. This needs to match
# the pattern the em-api uses. It also must be just as strict as OpenAM's.
#
# NOTE: Due to the Config package having multi-value properties enabled, you have to
# escape any commas with a \
#
# Default: ((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!_-]).{8\,20})
#
#password.pattern=((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!_-]).{8\,20})

#
# The base topic for broadcast alerts. The API will append the userid
# for sending an alert to a specific user. This basetopic + userid will be
# the topic clients will be listening on.
#
broadcastalerts.basetopic=iweb.NICS.broadcastalerts.user.

# Whether to log request/response IDs and messages for debugging
logging.request=false

# Whether or not to prepend the prefix.content string to logged messages
# Default: false
logging.prefix.use=true

# Whether or not to prepend a UTC timestamp to logged messages
# Default: false
logging.prefix.timestamp=true

# The content to prepend to all logged messages
# Default: "IWEB -"
# NOTE: trailing whitespace isn't included, so a space is always
#       added by the client code
logging.prefix.content=NICS -

# trace, debug, info, warn, error, silent
logging.level=trace

# Whether or not to log to remote logging endpoint
logging.remote=false

# Whether or not to register error event handler 
# with the logger module's error handling that allows
# for publishing errors to the logger endpoint on the API
# Default: false
logging.onerror=false

# Whether to publish caught Errors to log endpoint. Note, only
# works if 'logging.onerror' property is set to true
# Default: false
logging.publisherrors=false

# Logging level used by atmosphere
atmosphere.logging.level=info
translation.directory=/static/translations/

nics.idam.server={{ nics_keycloak_fqdn }}
nics.domain={{ nics_alias_fqdn }}

nics.track.interval.layer=nics:nics_breadcrumbs
nics.track.date.layer=nics:nics_breadcrumbs_date
nics.track.team.layer=nics:mobiledevicetrack_team
nics.track.datasourceid=E6841EBD-685D-45CE-B312-6D3D790CF4EA
nics.track.datalayer.icon.url=/upload/tracking

document.org.directory=/upload/documents/org/
document.incident.directory=/upload/documents/incident/
document.collabroom.directory=/upload/documents/collabroom/

endpoint.symbology=upload/symbology